# Dockerfile for ARM v7 architecture
# Uses older Node.js version and pre-compiled TypeScript
FROM node:16-alpine

RUN apk add --no-cache iperf3 iputils traceroute dumb-init

WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN echo "ðŸ“¦ Starting npm ci..." && \
    npm ci --loglevel verbose && \
    echo "âœ… npm install complete with dev dependencies" && \
    npm cache clean --force

# Install TypeScript globally for compilation
RUN npm install -g typescript

# Copy source files and tsconfig
COPY src/ ./src/
COPY tsconfig.json ./
COPY tsconfig.armv7.json ./
COPY scripts/ ./scripts/

# Compile TypeScript to JavaScript
RUN echo "ðŸ”¨ Compiling TypeScript..." && \
    tsc --project tsconfig.armv7.json && \
    echo "âœ… TypeScript compilation complete"

# Remove dev dependencies and reinstall production only
RUN echo "ðŸ§¹ Cleaning up dev dependencies..." && \
    npm ci --omit=dev --loglevel verbose && \
    npm cache clean --force && \
    echo "âœ… Production dependencies installed"


# Set permissions
RUN mkdir -p /app/data && \
    chown -R node:node /app && \
    chmod 755 /app/data && \
    chmod +x ./scripts/*.sh

USER node

ENTRYPOINT ["dumb-init", "--"]
CMD ["./scripts/start-armv7.sh"]
